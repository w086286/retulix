<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tis.admin.mapper.NoticeMapper">

	<!-- 조건마다 다르게 검색하기 조각sql: whereClause -->
	<sql id="whereClause">
		<if test="selectBox != null and searchInput != ''">
			<where><!-- if를 통과하면 where절 삽입 -->
				<choose><!-- switch와 비슷 -->
					<when test="selectBox=='idx'">
						idx like upper('%'||#{searchInput}||'%')
					</when>
					<when test="selectBox=='title'">
						title like '%'||#{searchInput}||'%'
					</when>
					<otherwise><!-- 디폴트 -->
						idx like upper('%'||#{searchInput}||'%')
					</otherwise>
				</choose>
			</where>"C:/Users/2class-005/git/tis_retulix/src/admin/persistence/adminMapper.xml"
		</if>
	</sql>
	<!-- //whereClause 조각sql -->
	
	<!-- 총 공지사항 개수 -->
	<select id="getTotalNotice" resultType="int">
		select count(idx) from notice
	</select>
	<!-- 검색한 공지사항 개수 -->
	<select id="getTotalSearchNotice" resultType="int">
		select count(idx) from notice
		<include refid="whereClause"/>
	</select>
	
	<!-- 모든 공지사항 보여주기 -->
	<select id="getNoticeList" resultType="Notice" parameterType="Map">
		select * from (select rownum rn, notice.* from
		 (select idx, title, info, wdate, click, name from notice order by idx desc) notice)
		where rn between #{start} and #{end}
	</select>
	<!-- 검색한 공지사항 보여주기 -->
	<select id="getSearchNotice" resultType="Notice" parameterType="Map">
		select * from(
		 select rownum rn, notice.* from
		  (select idx, title, info, wdate, click, name from notice
		  <include refid="whereClause"/>
		  order by idx desc) notice)
		where rn between #{start} and #{end}
	</select>
	<!-- idx로 공지사항 가져오기 -->
	<select id="getNoticeByIdx" resultType="Notice" parameterType="string">
		select idx, title, info, wdate, click, name from notice where idx=#{idx}
	</select>
	<!-- 공지사항 조회수 증가 -->
	<update id="updateClick" parameterType="string">
		update notice set click=(click+1) where idx=#{value}
	</update>
	<!-- 공지사항 등록 -->
	<insert id="insertNotice" parameterType="Notice">
		<!-- 시퀀스 selectKey -->
		<selectKey keyProperty="idx" order="BEFORE" resultType="int">
			select notice_seq.nextval from dual
		</selectKey>
		insert into notice values(#{idx},#{title},#{info},sysdate,0,#{name})
	</insert>
	<!-- 공지사항 수정 -->
	<update id="updateNotice" parameterType="Notice">
		update notice set title=#{title}, info=#{info}, wdate=sysdate where idx=#{idx}
	</update>
	<!-- 공지사항 삭제 -->
	<delete id="deleteNotice" parameterType="string">
		delete from notice where idx=#{idx}
	</delete>
</mapper>