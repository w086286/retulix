<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
	mapper는 context-datasource.xml의 <mybatis-spring:scan>에 넣어준다
		예) <mybatis-spring:scan base-package="com.tis.user.mapper, com.tis.admin.mapper"
	
	그리고 mybatis-config.xml에도 등록해준다
		예)
		<mappers>
			<mapper resource="spring/mapper/MemoMapper.xml"/>
			<mapper resource="spring/mapper/UserMapper.xml"/>
			<mapper resource="spring/mapper/ProductMapper.xml"/>
			...
		</mappers>
 -->
<mapper namespace="com.tis.admin.mapper.MemberMapper">
	<!-- 전체회원수 -->
	<select id="getTotalMember" resultType="int">
		select count(email) from member_view
	</select>
	<!-- 검색한 회원수 -->
	<select id="getTotalSearchMember" resultType="int" parameterType="map">
		select count(email) from member_view
		<include refid="whereClause"/>
	</select>
	<!-- 전체회원 목록 -->
	<select id="getMemberList" resultType="Member" parameterType="map">
		select * from (
		select rownum rn, member.* from
		(select *
		  from member_view order by email) member)
		where rn between #{start} and #{end}
	</select>
	<!-- 검색한 회원 목록 -->
	<select id="getSearchMember" resultType="Member" parameterType="map">
		select * from(
		select rownum rn, member.* from
		(select * from member_view
		<include refid="whereClause"/> order by email) member)
		where rn between #{start} and #{end}
	</select>
	<!-- 이메일로 회원정보 가져오기 -->
	<select id="getMemberByEmail" resultType="Member" parameterType="string">
		select
		<include refid="member_view_col"/>
		from member_view where email=#{email}
	</select>
	<!-- 회원정보 수정 -->
	<update id="updateMember" parameterType="Member">
		update member set name=#{name}, point=#{point}, state=#{state} 
		where email=#{email}
	</update>
	<!-- 회원정보 삭제 -->
	<delete id="deleteMember" parameterType="Member">
		delete member where email=#{email}
	</delete>
	
	<!-- 검색하기 조각sql -->
	<sql id="whereClause">
		<if test="selectBox != null and searchInput != ''">
			<where>
				<choose>
					<when test="selectBox=='email'">
						email like upper('%'||#{searchInput}||'%')
					</when>
					<when test="selectBox=='name'">
						name like '%'||#{searchInput}||'%'
					</when>
					<when test="selectBox=='stateStr'">
						stateStr like '%'||#{searchInput}||'%'
					</when>
					<otherwise>
						email like '%'||#{searchInput}||'%'
					</otherwise>
				</choose>
			</where>
		</if>
	</sql>
	<!-- 멤버의 모든컬럼 조각sql -->
	<sql id="member_view_col">
		email, pwd, name, age, point, subs, icon, chimg, state, stateStr 
	</sql>
</mapper>